name: swift

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # Build and test on multiple platforms
  build-and-test:
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        swift: ["5.9"]
    steps:
    - uses: actions/checkout@v4
    
    # Fix GPG keyring issues on Linux
    - name: Setup GPG (Linux)
      if: runner.os == 'Linux'
      run: |
        # Create GPG directories with proper permissions
        mkdir -p ~/.gnupg
        chmod 700 ~/.gnupg
        echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
        # Restart the GPG agent
        killall gpg-agent || true
        gpg-agent --daemon
        # Import Swift.org keys
        curl -fsSL https://swift.org/keys/all-keys.asc | gpg --import -
    
    # Use the official Swift setup action v2
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift }}
        
    # Verify Swift installation
    - name: Verify Swift installation
      run: swift --version
        
    # Linux-specific setup
    - name: Install D-Bus dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        # Install both development (for building) and runtime libraries
        sudo apt-get install -y libdbus-1-dev dbus
        # Start D-Bus session for testing
        dbus-launch --auto-syntax
        
    # macOS-specific setup - just install D-Bus but don't try to start the service
    - name: Install D-Bus (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install dbus
        # Don't try to start the service as it's not needed for build
        
    # Build the package
    - name: Build
      run: swift build -c release
      
    # Run tests only on Linux where D-Bus is available
    - name: Run tests with Swift Testing (Linux)
      if: runner.os == 'Linux'
      run: swift test
      
    # On macOS, build but skip tests that require D-Bus
    - name: Build only on macOS (skip tests)
      if: runner.os == 'macOS'
      run: echo "Skipping tests on macOS as D-Bus is primarily a Linux technology"