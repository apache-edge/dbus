# Workflow name
name: swift

# Triggers for the workflow
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

# Jobs to run
jobs:
  build-and-test:
    name: Swift ${{ matrix.swift }} on Linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        swift: ["6.0.0"] # Use specific release version

    steps:
    # 1. Check out repository code
    - name: Check out repository code
      uses: actions/checkout@v4

    # === Linux Setup (Ubuntu 22.04) ===
    # 2. Ensure prerequisites are installed
    - name: Ensure Prerequisites
      run: |
        sudo apt-get update && sudo apt-get install -y \
          gpg dirmngr curl wget \
          libatomic1 libncurses5
        mkdir -p ~/.gnupg
        chmod 700 ~/.gnupg
        echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
        echo "Prerequisites installed, GPG configured."

    # 3. Fetch and import Swift keys
    - name: Fetch and Import Swift Keys
      run: |
        echo "Downloading and importing Swift keys..."
        curl -fsSL https://swift.org/keys/all-keys.asc | gpg --import -
        echo "Import process completed."
        if gpg --list-keys 'Swift 6.x Release Signing Key'; then
          echo "Swift 6.x Release Signing key successfully imported/found."
        else
          # Try alternative key format
          curl -fsSL https://swift.org/keys/all-keys.asc.gpg | gpg --import -
          if gpg --list-keys 'Swift 6.x Release Signing Key'; then
            echo "Swift 6.x Release Signing key successfully imported/found (alternative format)."
          else
            echo "ERROR: Swift 6.x Release Signing Key not found after import attempts!" >&2
            exit 1
          fi
        fi

    # 4. Set up Swift using action
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift }} # "6.0.0"

    # 5. Verify Swift installation
    - name: Verify Swift installation
      run: swift --version

    # 6. Install D-Bus dependencies
    - name: Install D-Bus dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libdbus-1-dev dbus
        eval $(dbus-launch --auto-syntax)
        echo "D-Bus dependencies installed and session launched."

    # 7. Build the Swift package
    - name: Build Package
      run: swift build -c release -v

    # 8. Run tests
    - name: Run Tests
      run: swift test -v