name: swift

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # Build and test on multiple platforms
  build-and-test:
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        swift: ["6.0.0"]
    steps:
    - uses: actions/checkout@v4
    
    # Use a simpler approach to fix GPG issues on Ubuntu
    - name: Fix GPG keys (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        # Skip GPG verification for apt
        echo 'Acquire::AllowInsecureRepositories "true";' | sudo tee /etc/apt/apt.conf.d/99allow-insecure
        echo 'Acquire::AllowDowngradeToInsecureRepositories "true";' | sudo tee -a /etc/apt/apt.conf.d/99allow-insecure
        echo 'APT::Get::AllowUnauthenticated "true";' | sudo tee -a /etc/apt/apt.conf.d/99allow-insecure
    
    - name: Setup Swift
      uses: SwiftyLab/setup-swift@v1
      with:
        swift-version: ${{ matrix.swift }}
        
    - name: Install D-Bus dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        # Install both development (for building) and runtime libraries
        sudo apt-get install -y libdbus-1-dev dbus
        # Start D-Bus session for testing
        sudo dbus-launch --auto-syntax
        
    - name: Install D-Bus (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install dbus
        brew services start dbus
        
    - name: Build
      run: swift build -c release
      
    - name: Run tests with Swift Testing
      run: swift test